name: Linux .rpm installer on Python 3.9

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
        - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Linux .rpm installer on Python 3.9
    runs-on: ubuntu-latest
    container:
      image: chianetwork/centos7-builder:latest
    timeout-minutes: 40
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
    - name: Cancel previous runs on the same branch
      if: ${{ github.ref != 'refs/heads/main' }}
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ github.token }}

    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Cleanup any leftovers that exist from previous runs
      run: bash build_scripts/clean-runner.sh || true

    # Create our own venv outside of the git directory JUST for getting the ACTUAL version so that install can't break it
    - name: Get version number
      id: version_number
      run: |
        python3 -m venv ../venv
        . ../venv/bin/activate
        pip3 install setuptools_scm
        CHIVES_INSTALLER_VERSION=$(python3 ./build_scripts/installer-version.py)
        CHIVES_INSTALLER_VERSION_NORMALIZED=${CHIVES_INSTALLER_VERSION//-/\.}
        echo "::set-output name=CHIVES_INSTALLER_VERSION::$CHIVES_INSTALLER_VERSION"
        echo "::set-output name=CHIVES_INSTALLER_VERSION_NORMALIZED::$CHIVES_INSTALLER_VERSION_NORMALIZED"
        deactivate

    - name: Test for secrets access
      id: check_secrets
      shell: bash
      run: |
        unset HAS_SECRET
        if [ -n "$SECRET" ]; then HAS_SECRET='true' ; fi
        echo ::set-output name=HAS_SECRET::${HAS_SECRET}
      env:
        SECRET: "${{ secrets.INSTALLER_UPLOAD_SECRET }}"

    - name: Run install script
      env:
        INSTALL_PYTHON_VERSION: ${{ matrix.python-version }}
        BUILD_VDF_CLIENT: "N"
      run: |
        sh install.sh

    - name: Build .rpm package
      run: |
        . ./activate
        ldd --version
        cd ./chives-blockchain-gui
        git status
        cd ../build_scripts
        sh build_linux_rpm.sh amd64

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Linux-Installers
        path: ${{ github.workspace }}/build_scripts/final_installer/

    - name: Configure AWS Credentials
      if: steps.check_secrets.outputs.HAS_SECRET
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.INSTALLER_UPLOAD_KEY }}
        aws-secret-access-key: ${{ secrets.INSTALLER_UPLOAD_SECRET }}
        aws-region: us-west-2

    - name: Upload to s3
      if: steps.check_secrets.outputs.HAS_SECRET
      env:
          CHIVES_INSTALLER_VERSION: ${{ steps.version_number.outputs.CHIVES_INSTALLER_VERSION_NORMALIZED }}
      run: |
          ls $GITHUB_WORKSPACE/build_scripts/final_installer/
          aws s3 cp $GITHUB_WORKSPACE/build_scripts/final_installer/chives-blockchain-${CHIVES_INSTALLER_VERSION}-1.x86_64.rpm s3://download-chives-net/builds/

    - name: Create Checksums
      if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
      env:
        CHIVES_INSTALLER_VERSION: ${{ steps.version_number.outputs.CHIVES_INSTALLER_VERSION_NORMALIZED }}
      run: |
         ls $GITHUB_WORKSPACE/build_scripts/final_installer/
         sha256sum $GITHUB_WORKSPACE/build_scripts/final_installer/chives-blockchain-${CHIVES_INSTALLER_VERSION}-1.x86_64.rpm > $GITHUB_WORKSPACE/build_scripts/final_installer/chives-blockchain-${CHIVES_INSTALLER_VERSION}-1.x86_64.rpm.sha256
         ls $GITHUB_WORKSPACE/build_scripts/final_installer/

    - name: Install py3createtorrent
      if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
      run: |
        pip3 install py3createtorrent

    - name: Create .rpm torrent
      if: startsWith(github.ref, 'refs/tags/')
      env:
        CHIVES_INSTALLER_VERSION: ${{ steps.version_number.outputs.CHIVES_INSTALLER_VERSION_NORMALIZED }}
      run: |
          py3createtorrent -f -t udp://tracker.opentrackr.org:1337/announce $GITHUB_WORKSPACE/build_scripts/final_installer/chives-blockchain-${CHIVES_INSTALLER_VERSION}-1.x86_64.rpm -o $GITHUB_WORKSPACE/build_scripts/final_installer/chives-blockchain-${CHIVES_INSTALLER_VERSION}-1.x86_64.rpm.torrent --webseed https://download-chives-net.s3.us-west-2.amazonaws.com/install/chives-blockchain-${CHIVES_INSTALLER_VERSION}-1.x86_64.rpm
          ls
